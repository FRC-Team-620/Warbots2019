##########################################################
#  This file was generated at one time - in order to ease
#  comparison with other config files it is advisable that
#  you do not alter the ORDER of things, though you're free
#  to change the values, comment-out, or remove names altogether
##########################################################
# DriveTrain: Raw scale range 0 to 1.0 for speed dead zone
#
# Options:
#   (0,1.0)
driver.center_deadzone = 

# DriveTrain: radians of wedge that isolates a joystick 'spin' for values near 0
#
# (no options defined)
driver.rotation_deadzone = 

# DriveTrain: radians of wedge that isolates a joystick 'straight' for values near 0
#
# (no options defined)
driver.speed_deadzone = 


# Name Of Robot
#
# (no options defined)
name = 

# Whether to instantiate driverJoystick
#
# Options:
#   true
#   false
driver.enabled = 

# Whether to instantiate scorerJoystick
#
# Options:
#   true
#   false
scorer.enabled = 

# Fully-scoped name of a DriveTrain implementation.
#
# Options:
#   org.usfirst.frc620.Warbots2019.drivetrain.SparkDriveTrain
#   org.usfirst.frc620.Warbots2019.drivetrain.SparkMaxDriveTrain
#   org.usfirst.frc620.Warbots2019.sim.SimDriveTrain
DriveTrain = 

# Fully-scoped name of a ScoringMechanism implementation.
#
# Options:
#   org.usfirst.frc620.Warbots2019.mechanisms.cargo.CargoMech
#   org.usfirst.frc620.Warbots2019.mechanisms.pinchPointGearGrabber
#   org.usfirst.frc620.Warbots2019.mechanisms.tazGrabber.TazGrabber
ScoringMechanism = 

# Fully-scoped name of a ClimbingMechanism implementation
#
# Options:
#   org.usfirst.frc620.Warbots2019.climbing.PistonLift
#   org.usfirst.frc620.Warbots2019.climbing.ScissorLift
ClimbingMechanism = 

# Fully-scopes name of an Elevator implementation
#
# Options:
#   org.usfirst.frc620.Warbots2019.elevator.TalonElevator
#   org.usfirst.frc620.Warbots2019.elevator.TwoTalonElevator
Elevator = 

# The pump that powers all pneumatic systems
#
# Options:
#   nothing available
Compressor = 


# This is a binary control (like b, x, y, leftBumper, rightBumper, All the possible binary commands are listed below. 
#
# Options:
#   tazOpenCommand
#   tazStowCommand
driver.A.pressed = 

# B Button (binary command)
#
# (no options defined)
driver.B.pressed = 

# X Button (binary command)
#
# (no options defined)
driver.X.pressed = 

# Y Button (binary command)
#
# (no options defined)
driver.Y.pressed = 

# Left Bumper (binary command)
#
# (no options defined)
driver.LB.pressed = 

# Right Bumper (binary command)
#
# (no options defined)
driver.RB.pressed = 

# Pressing DPad UP
#
# (no options defined)
driver.pov.up = 

# Pressing DPad RIGHT
#
# (no options defined)
driver.pov.right = 

# Pressing DPad DOWN
#
# (no options defined)
driver.pov.down = 

# Pressing DPad LEFT
#
# (no options defined)
driver.pov.left = 

# This is a binary control (like b, x, y, leftBumper, rightBumper, All the possible binary commands are listed below. 
#
# Options:
#   tazOpenCommand
#   tazStowCommand
scorer.A.pressed = 

# B Button (binary command)
#
# (no options defined)
scorer.B.pressed = 

# X Button (binary command)
#
# (no options defined)
scorer.X.pressed = 

# Y Button (binary command)
#
# (no options defined)
scorer.Y.pressed = 

# Left Bumper (binary command)
#
# (no options defined)
scorer.LB.pressed = 

# Right Bumper (binary command)
#
# (no options defined)
scorer.RB.pressed = 

# Pressing DPad UP
#
# (no options defined)
scorer.pov.up = 

# Pressing DPad RIGHT
#
# (no options defined)
scorer.pov.right = 

# Pressing DPad DOWN
#
# (no options defined)
scorer.pov.down = 

# Pressing DPad LEFT
#
# (no options defined)
scorer.pov.left = 

# This is an analog control and therefore this maps to OI analog functionalities. 
#
# Options:
#   OI.robot.speed
#   OI.robot.rotation_rate
#   OI.elevator.speed
#   OI.mech.deploy_rate
OI.LeftJS.X = 

# (OI Analog Control)
#
# (no options defined)
OI.LeftJS.Y = 


